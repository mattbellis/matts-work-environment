import numpy as np
import sys
import smtplib
from email.mime.text import MIMEText
from email.mime.image import MIMEImage
from email.mime.multipart import MIMEMultipart
import base64
import ssl
import getpass
import os

################################################################################
# Reference
# https://julien.danjou.info/sending-emails-in-python-tutorial-code-examples/
# https://realpython.com/python-send-email/
################################################################################

################################################################################
course = 'phys250_s20'
#course = 'phys400_NP_s20'
nstudents_in_group = 2

coursename = "PHYS 250: Intro to Computational Physics"
if course=="phys250_s20":
    coursename = "PHYS 250: Intro to Computational Physics"
elif course=="phys400_NP_s20":
    coursename = "PHYS 400: Nuclear and Particle Physics"
################################################################################

########################################################################
login = "1a2b3c4d5e6f7g" # paste your login generated by Mailtrap
password = "1a2b3c4d5e6f7g" # paste your password generated by Mailtrap
sender_email = "matthew.bellis@gmail.com"
# FOR TESTING
receiver_email = "mbellis@siena.edu"
port = 465
password = getpass.getpass("Your password: ")
#password = "HERE"

context = ssl.create_default_context()

with smtplib.SMTP_SSL("smtp.gmail.com", port, context=context) as server:
    server.login(sender_email, password)

########################################################################

################################################################################
def write_and_send_email(student, partners):

    message = MIMEMultipart("alternative")
    message["Subject"] = "CLASS PARTNER ASSIGNMENTS - " + coursename
    message["From"] = sender_email
    message["To"] = "matthew.bellis@gmail.com"

    text = "Hi {0},\n\n".format(student[1])
    text += "For the next class, you'll get to work with these awesome peers of yours (yes one of them is you).\n\n"
    for s in partners:
        #print(s)
        text += "{0} {1}\n".format(s[1],s[2])

    text += "\nIf you're not sure who they are, you can find their pictures attached to this email\n\n"
    text += "When working in groups, we all want that time to be as productive as possible."
    text += "Here are some things to keep in mind\n\n"
    text += "* Don't make any derogatory comments about other students and their ideas.\n"
    text += "* Make sure that everyone participates and gets chance to offer their thoughts.\n"
    text += "* Make sure everyone gets listened to.\n"
    text += "* Don't interrupt when another student is talking.\n"
    text += "* Come to lab prepared and prepared to work.\n"
    text += "\nSee you in class!\n\nMatt Bellis"

    part1 = MIMEText(text, "plain")

    message.attach(part1)

    for s in partners:
        filename = course + '_files/' + s[0] + '.jpg'

        if not os.path.exists(filename):
            filename = 'file_not_found.jpg'

        with open(filename,'rb') as img:
            image = MIMEImage(img.read())
            image.add_header('Content-ID', '<myimage>')
            message.attach(image)


    context = ssl.create_default_context()
    with smtplib.SMTP_SSL("smtp.gmail.com", 465, context=context) as server:
        server.login(sender_email, password)
        # UNCOMMENT THIS WHEN SENDING FOR REAL
        # FOR TESTING
        receiver_email = student[3]
        server.sendmail(sender_email, receiver_email, message.as_string()
                                    )



################################################################################


classroster_filename = course + '_classroster.csv'
classfiles_filename = course + '_files'

classinfo = np.loadtxt(classroster_filename,unpack=True,dtype=str,delimiter=',',skiprows=1)
#print(classinfo)

pin = classinfo[5]
lname = classinfo[7]
fname = classinfo[8]
email = classinfo[14]

#print(pin,lname,fname,email)

nstudents = len(pin)

indices = np.arange(0,nstudents,1)
np.random.shuffle(indices)

#print(nstudents)
#print(indices)

students_counted = 0
while 1:

    students_in_group = []
    for i in range(nstudents_in_group):
        #print(i,students_counted)
        student = []
        idx = indices[students_counted]
        student.append(pin[idx])
        student.append(fname[idx])
        student.append(lname[idx])
        student.append(email[idx])

        students_in_group.append(student)
        students_counted += 1

    # Do the emails
    for s in students_in_group:
        print(s)
        #email(s,students)
        write_and_send_email(s,students_in_group)
        #exit()

    if nstudents-students_counted==2 and nstudents_in_group==3:
        nstudents_in_group=2
        print("here: {0}".format(nstudents_in_group))

    if nstudents-students_counted==3 and nstudents_in_group==2:
        nstudents_in_group=3

    if nstudents-students_counted<=0:
        break

