#!/usr/bin/ruby1.8


######################
$rule = [AmpRule.new , AmpRule.new, AmpRule.new , AmpRule.new] 

# Treat the magnetic multipoles differently
$rule[0].rule = "channel=s:mp=M"
$rule[0].parRules[0] = ParameterRule.new("gP.mod.channel.isospin.jp",                "free","(0,6.28)","0.01","cos(x)",  "-sin(x)")
$rule[0].parRules[1] = ParameterRule.new("gP.phase.channel.isospin.jp",              "free","(0,6.28)","0.01","exp(i*x)","i*exp(i*x)")
$rule[0].parRules[2] = ParameterRule.new("gD.mod.channel.isospin.jp.final_state.L.S","free","(-10,10)","0.01","x",       "1")
$rule[0].coherenceRule = CoherenceRule.new("mz_g.mz_i.mz_f.dataset.final_state")

# Treat the electric multipoles differently
$rule[1].rule = "channel=s:mp=E"
$rule[1].parRules[0] = ParameterRule.new("gP.mod.channel.isospin.jp",  "free" , "(0,6.28)" ,  "0.01", "sin(x)",   "cos(x)")
$rule[1].parRules[1] = ParameterRule.new("gP.phase.channel.isospin.jp", "free" , "(0,6.28)" ,  "0.01", "exp(i*x)", "i*exp(i*x)")
$rule[1].parRules[2] = ParameterRule.new("gD.mod.channel.isospin.jp.final_state.L.S",   "free", "(-10,10)", "0.01", "x",   "1")
$rule[1].coherenceRule = CoherenceRule.new("mz_g.mz_i.mz_f.dataset.final_state")

# This is for s-channel amplitudes with J=1/2 and only one coupling
$rule[2].rule = "channel=s:jp=1"
$rule[2].parRules[0] = ParameterRule.new("gP.mod.channel.isospin.jp",                "free" , "(-10,10)" ,  "0.01", "x",   "1")
$rule[2].parRules[1] = ParameterRule.new("gP.phase.channel.isospin.jp",              "fixed" , "0.0" ,  "0.00", "exp(i*x)", "i*exp(i*x)")
$rule[2].coherenceRule = CoherenceRule.new("mz_g.mz_i.mz_f.dataset.final_state")

$rule[3].rule = "channel=t"
$rule[3].parRules[0] = ParameterRule.new(" gP.mod.channel.jp.propagator.lorentz","free" , "(-10,10)" ,  "0.01", "x",   "1")
$rule[3].coherenceRule = CoherenceRule.new("mz_g.mz_i.mz_f.dataset.final_state")





